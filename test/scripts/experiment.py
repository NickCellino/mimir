#!/usr/bin/python

import os
import subprocess
import glob
import argparse
import time

scripts = os.path.dirname(os.path.realpath(__file__))
mimirhome = os.path.abspath(os.path.join(scripts, "..", ".."))
FNULL = open(os.devnull, 'w')


def buildmimir():

	print("\n\nBuilding mimir...")
	os.chdir("mimircore")
	try:
		subprocess.check_call(["sbt", "package"])
	except subprocess.CalledProcessError:
		print("Sbt package failed, exiting...")
		sys.exit(0)

	os.chdir("..")


if __name__ == "__main__":
	parser = argparse.ArgumentParser(description= """
		Run experiments on a given tpch database generated by tpch.py
		"""
		)

	parser.add_argument('--db', default="tpchsmall.db", help="The db to run the experiments on, this must have been set up by tpch.py")
	args = parser.parse_args()

	os.chdir(mimirhome)

	try:
		print("Switiching to mimir-inDB")
		subprocess.check_call(["git", "checkout", "backing-store"])
	except subprocess.CalledProcessError:
		print("Failed to checkout backing-store, exiting...")
		sys.exit(0)	


	buildmimir()

	
	files = glob.glob("test/tpch_queries/noagg/*.sql")
	for f in files:
		print("{0}".format(f))
		start = time.time()
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		print("Time: {0}s\n".format((time.time() - start)/3))


	files = glob.glob("test/tpch_queries/det/*.sql")
	for f in files:
		print("{0}".format(f))
		start = time.time()
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		print("Time: {0}s\n".format((time.time() - start)/3))

	try:
		print("Switiching to mimir-classic")
		subprocess.check_call(["git", "checkout", "mimir-classic"])
	except subprocess.CalledProcessError:
		print("Failed to checkout mimir-classic, exiting...")
		sys.exit(0)	


	buildmimir()


	files = glob.glob("test/tpch_queries/noagg/*.sql")
	for f in files:
		print("{0}".format(f))
		start = time.time()
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		print("Time: {0}s\n".format(time.time() - start))
