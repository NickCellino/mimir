#!/usr/bin/python

import os
import subprocess
import glob
import argparse
import time

scripts = os.path.dirname(os.path.realpath(__file__))
mimirhome = os.path.abspath(os.path.join(scripts, "..", ".."))
FNULL = open(os.devnull, 'w')


if __name__ == "__main__":
	parser = argparse.ArgumentParser(description= """
		Run experiments on a given tpch database generated by tpch.py
		"""
		)

	parser.add_argument('--db', default="tpchsmall.db", help="The db to run the experiments on, this must have been set up by tpch.py")
	args = parser.parse_args()

	os.chdir(mimirhome)


	files = glob.glob("test/tpch_queries/noagg/*.sql")
	for f in files:
		print("{0}".format(f))
		start = time.time()
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		print("Time: {0}s\n".format((time.time() - start)/3))

		
	files = glob.glob("test/tpch_queries/det/*.sql")
	for f in files:
		print("{0}".format(f))
		start = time.time()
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		subprocess.check_call(["./bin/mimir", "--db", args.db, f], stdout=FNULL)
		print("Time: {0}s\n".format((time.time() - start)/3))

